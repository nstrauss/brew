#!/bin/bash
# $1 Full path to the installer (unused)
# $2 Location of the Homebrew installation we may need to move into place
# $3 Target install location (unused)
# $4 System root directory (unused)
set -eu

# disable analytics while installing
export HOMEBREW_NO_ANALYTICS_THIS_RUN=1
export HOMEBREW_NO_ANALYTICS_MESSAGE_OUTPUT=1

# verify the installation exists
# default to /opt/homebrew to make development/testing easier
homebrew_directory="${2:-/opt/homebrew}"
if [[ ! -d "${homebrew_directory:?}" ]]
then
  echo "No directory at ${homebrew_directory}!" >&2
  exit 1
fi

# add Git to path
export PATH="/Library/Developer/CommandLineTools/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:${PATH}"

# reset Git repository
cd "${homebrew_directory}"
git config --global --add safe.directory "${homebrew_directory}"
git reset --hard
git checkout --force master
git branch | grep -v '\*' | xargs -n 1 git branch --delete --force
git config --global --unset safe.directory "${homebrew_directory}"

# move to /usr/local if on x86_64
if [[ $(uname -m) == "x86_64" ]]
then
  mkdir -vp /usr/local/bin /usr/local/Homebrew
  cp -a "${homebrew_directory}"/* "${homebrew_directory}/".??* "/usr/local/Homebrew/"

  # create symlink to /usr/local/bin/brew
  ln -svf "../Homebrew/bin/brew" "/usr/local/bin/brew"

  homebrew_directory="/usr/local/Homebrew"
  cd /usr/local
fi

# create missing directories
mkdir -vp Cellar Frameworks etc include lib opt sbin share var/homebrew/linked

# get valid logged in user
logged_in_user=$(echo "show State:/Users/ConsoleUser" | scutil | awk '/Name :/ { print $3 }')

# optionally pass an environment variable to `installer` to define user
if [[ "${HOMEBREW_PKG_USER}" ]]
then
  logged_in_user="${HOMEBREW_PKG_USER}"
elif [[ "${logged_in_user}" =~ _mbsetupuser|loginwindow|root ]] || [[ -z "${logged_in_user}" ]]
then
  # get last created account UID over 500
  logged_in_user=$(dscl . list /Users UniqueID | awk '$2 > 500 { print $1 }' | tail -n 1)
  # no valid accounts exist yet, use root temporarily
  if [[ -z "${logged_in_user}" ]]
  then
    logged_in_user="root"
  fi
fi

# set permissions
if [[ "${homebrew_directory}" == "/usr/local/Homebrew" ]]
then
  chown -R "${logged_in_user}:admin" Cellar Frameworks Homebrew bin etc include lib sbin share var/homebrew/linked
else
  chown -R "${logged_in_user}:admin" .
fi

# move API cache to ~/Library/Caches/Homebrew
if [[ ! "${logged_in_user}" == "root" ]]
then
  user_home_dir=$(dscl . read /Users/${logged_in_user} NFSHomeDirectory | awk '{ print $2 }')
  user_api_cache_dir="${user_home_dir}/Library/Caches/Homebrew/api"
  mkdir -vp "${user_api_cache_dir}"
  mv -v "${homebrew_directory}/cache_api/"* "${user_api_cache_dir}"
  chown -R "${logged_in_user}:staff" "${user_api_cache_dir}"
  rm -vrf "${homebrew_directory}/cache_api"
fi
